name: Build, test and publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build code
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Run Nuke Build üèó
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }} # For pull_request events we override the /refs/pull/xx/merge branch to the PR's head branch
        OCTOVERSION_Patch: ${{ github.run_number }}
      run: ./build.cmd
    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts/
  test:
    name: Run test matrix
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, windows-2019, ubuntu-20.04, ubuntu-18.04, macos-11]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Run Nuke Test üß™
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        OCTOVERSION_FullSemVer: 1.0.0 # This should skip version calculation
        OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }} # For pull_request events we override the /refs/pull/xx/merge branch to the PR's head branch
        OCTOVERSION_Patch: ${{ github.run_number }}
      run: ./build.cmd --target Test
  docker-build:
    name: Create Docker image
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: artifacts
    - name: Run Nuke üõ¢
      env:
        OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }} # For pull_request events we override the /refs/pull/xx/merge branch to the PR's head branch
        OCTOVERSION_Patch: ${{ github.run_number }}
      run: ./build.sh --target BuildDockerImage
  linux-distro-packages-build:
    name: Create Linux disto packages
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: artifacts
    - name: Run Nuke üõ¢
      env:
        OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }} # For pull_request events we override the /refs/pull/xx/merge branch to the PR's head branch
        OCTOVERSION_Patch: ${{ github.run_number }}
      run: ./build.sh --target CreateLinuxPackages
    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifacts/
  # push-to-octopus:
  #   name: Push artifacts to Octopus
  #   needs: [docker-build, linux-distro-packages-build, test]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: artifacts
  #       path: artifacts
  #   - name: Run Nuke üõ¢
  #     env:
  #       OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }} # For pull_request events we override the /refs/pull/xx/merge branch to the PR's head branch
  #       OCTOVERSION_Patch: ${{ github.run_number }}
  #     run: ./build.cmd Publish

